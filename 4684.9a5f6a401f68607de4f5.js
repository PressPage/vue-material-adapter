(self.webpackChunkvue_material_adapter=self.webpackChunkvue_material_adapter||[]).push([[4684],{4684:function(f,t,e){"use strict";e.r(t),e.d(t,{default:function(){return j}});var s=e(8770);const l=(0,s.Wm)("h2",null,"Usage",-1),n=(0,s.Wm)("p",null,[(0,s.Uk)("The "),(0,s.Wm)("a",{href:"https://github.com/material-components/material-components-web/tree/master/packages/mcw-linear-progress"},"MDC Linear Progress"),(0,s.Uk)(" component.")],-1),r=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},":progress"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"progressValue"'),(0,s.Uk)(" />")]),(0,s.Uk)(`
`),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"indeterminate"),(0,s.Uk)(" />")]),(0,s.Uk)(`
`),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"progress"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.5"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"buffer"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.75"'),(0,s.Uk)(" />")]),(0,s.Uk)(`
`)])],-1),m=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,s.Wm)("span",{class:"hljs-keyword"},"var"),(0,s.Uk)(" vm = "),(0,s.Wm)("span",{class:"hljs-keyword"},"new"),(0,s.Uk)(` Vue({
  `),(0,s.Wm)("span",{class:"hljs-attr"},"data"),(0,s.Uk)(`: {
    `),(0,s.Wm)("span",{class:"hljs-attr"},"progressValue"),(0,s.Uk)(": "),(0,s.Wm)("span",{class:"hljs-number"},"0.5"),(0,s.Uk)(`,
  },
});
`)])],-1),c=(0,s.uE)("<h3>props</h3><table><thead><tr><th>prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>open</code></td><td>Boolean</td><td>true</td><td>When changed to <code>false</code>, closes the component</td></tr><tr><td><code>indeterminate</code></td><td>Boolean</td><td>false</td><td>If <code>true</code>, renders the indeterminate variant</td></tr><tr><td><code>progress</code></td><td>Number</td><td>undefined</td><td>Decimal value between 0 and 1, sets the progress bar width</td></tr><tr><td><code>buffer</code></td><td>Number</td><td>undefined</td><td>Decimal value between 0 and 1, sets the buffer bar width</td></tr><tr><td><code>bufferingDots</code></td><td>Boolean</td><td>true</td><td>Whether to show the buffer dots in the un-progressed section</td></tr><tr><td><code>tag</code></td><td>String</td><td>&#39;div&#39;</td><td>The root element</td></tr></tbody></table><ul><li>Determinate</li></ul>",3),d=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"progress"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.5"'),(0,s.Uk)(">")]),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(">")]),(0,s.Uk)(`
`)])],-1),o=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,"Buffer")],-1),p=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"progress"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.5"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"buffer"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.75"'),(0,s.Uk)(">")]),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(">")]),(0,s.Uk)(`
`)])],-1),h=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,"Indeterminate")],-1),i=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"indeterminate"),(0,s.Uk)(">")]),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(">")]),(0,s.Uk)(`
`)])],-1),W=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,"Reversed")],-1),u=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"dir"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"rtl"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"progress"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"0.5"'),(0,s.Uk)(">")]),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-linear-progress"),(0,s.Uk)(">")]),(0,s.Uk)(`
`)])],-1),g=(0,s.Wm)("h3",null,"Reference",-1),k=(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",{href:"https://github.com/material-components/material-components-web/tree/master/packages/mdc-linear-progress"},"https://github.com/material-components/material-components-web/tree/master/packages/mdc-linear-progress")])],-1);function U(_,b){return(0,s.wg)(),(0,s.j4)("article",null,[l,n,r,m,c,d,o,p,h,i,W,u,g,k])}const a={};a.render=U;var j=a}}]);

//# sourceMappingURL=4684.9a5f6a401f68607de4f5.js.map