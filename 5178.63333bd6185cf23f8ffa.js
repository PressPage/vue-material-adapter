(self.webpackChunkvue_material_adapter=self.webpackChunkvue_material_adapter||[]).push([[5178],{5178:function(t,s,a){"use strict";a.r(s),a.d(s,{default:function(){return i}});var e=a(5166),n=(0,e.Wm)("h2",null,"Usage",-1),d=(0,e.Wm)("pre",null,[(0,e.Wm)("code",{"v-pre":"",class:"language-html"},[(0,e.Wm)("span",{class:"hljs-tag"},[(0,e.Uk)("<"),(0,e.Wm)("span",{class:"hljs-name"},"mcw-snackbar"),(0,e.Uk)("\n  "),(0,e.Wm)("span",{class:"hljs-attr"},"v-model"),(0,e.Uk)("="),(0,e.Wm)("span",{class:"hljs-string"},'"open"'),(0,e.Uk)("\n  "),(0,e.Wm)("span",{class:"hljs-attr"},"message"),(0,e.Uk)("="),(0,e.Wm)("span",{class:"hljs-string"},'"Simple message"'),(0,e.Uk)("\n  "),(0,e.Wm)("span",{class:"hljs-attr"},":dismissAction"),(0,e.Uk)("="),(0,e.Wm)("span",{class:"hljs-string"},'"false"'),(0,e.Uk)("\n>")]),(0,e.Wm)("span",{class:"hljs-tag"},[(0,e.Uk)("</"),(0,e.Wm)("span",{class:"hljs-name"},"mcw-snackbar"),(0,e.Uk)(">")]),(0,e.Uk)("\n")])],-1),l=(0,e.Wm)("p",null,[(0,e.Uk)("Simple "),(0,e.Wm)("code",null,"mcw-snackbar"),(0,e.Uk)(" does not queue messages.")],-1),r=(0,e.Wm)("pre",null,[(0,e.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,e.Wm)("span",{class:"hljs-keyword"},"export"),(0,e.Uk)(),(0,e.Wm)("span",{class:"hljs-keyword"},"default"),(0,e.Uk)(" {\n  data() {\n    "),(0,e.Wm)("span",{class:"hljs-keyword"},"return"),(0,e.Uk)(" {\n      "),(0,e.Wm)("span",{class:"hljs-attr"},"open"),(0,e.Uk)(": "),(0,e.Wm)("span",{class:"hljs-literal"},"false"),(0,e.Uk)(",\n    };\n  },\n")])],-1),o=(0,e.Wm)("p",null,[(0,e.Uk)("or "),(0,e.Wm)("code",null,"mcw-snackbar-queue"),(0,e.Uk)(" maintains an internal queue of messages displayed in sequence.")],-1),c=(0,e.Wm)("pre",null,[(0,e.Wm)("code",{"v-pre":"",class:"language-html"},[(0,e.Wm)("span",{class:"hljs-tag"},[(0,e.Uk)("<"),(0,e.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,e.Uk)(),(0,e.Wm)("span",{class:"hljs-attr"},"@click"),(0,e.Uk)("="),(0,e.Wm)("span",{class:"hljs-string"},'"showLeading"'),(0,e.Uk)(">")]),(0,e.Uk)("Leading"),(0,e.Wm)("span",{class:"hljs-tag"},[(0,e.Uk)("</"),(0,e.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,e.Uk)(">")]),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"hljs-tag"},[(0,e.Uk)("<"),(0,e.Wm)("span",{class:"hljs-name"},"mcw-snackbar-queue"),(0,e.Uk)(),(0,e.Wm)("span",{class:"hljs-attr"},"ref"),(0,e.Uk)("="),(0,e.Wm)("span",{class:"hljs-string"},'"bar"'),(0,e.Uk)(" />")]),(0,e.Uk)("\n")])],-1),m=(0,e.Wm)("pre",null,[(0,e.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,e.Wm)("span",{class:"hljs-keyword"},"export"),(0,e.Uk)(),(0,e.Wm)("span",{class:"hljs-keyword"},"default"),(0,e.Uk)(" {\n  "),(0,e.Wm)("span",{class:"hljs-attr"},"methods"),(0,e.Uk)(": {\n    showLeading() {\n      "),(0,e.Wm)("span",{class:"hljs-keyword"},"this"),(0,e.Uk)(".$refs.bar.handleSnack({\n        "),(0,e.Wm)("span",{class:"hljs-attr"},"message"),(0,e.Uk)(": "),(0,e.Wm)("span",{class:"hljs-string"},"`Your photo has been archived.`"),(0,e.Uk)(",\n        "),(0,e.Wm)("span",{class:"hljs-attr"},"timeoutMs"),(0,e.Uk)(": "),(0,e.Wm)("span",{class:"hljs-number"},"5000"),(0,e.Uk)(",\n        "),(0,e.Wm)("span",{class:"hljs-attr"},"actionText"),(0,e.Uk)(": "),(0,e.Wm)("span",{class:"hljs-string"},"'Undo'"),(0,e.Uk)(",\n        "),(0,e.Wm)("span",{class:"hljs-attr"},"leading"),(0,e.Uk)(": "),(0,e.Wm)("span",{class:"hljs-literal"},"true"),(0,e.Uk)(",\n      });\n    },\n  },\n")])],-1),h=(0,e.uE)('<h3>Props</h3><h3><code>mcw-snackbar</code></h3><table><thead><tr><th>Prop Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>open</code></td><td>Boolean</td><td>v-model</td></tr><tr><td>message</td><td>String</td><td>Message to show in the snackbar</td></tr><tr><td>reason</td><td>String</td><td>Passed as argument when snackbar closes programatically</td></tr><tr><td>timeoutMs</td><td>Number</td><td>Timeout in milliseconds when to close snackbar.</td></tr><tr><td>closeOnEscape</td><td>Boolean</td><td>Closes popup on &quot;Esc&quot; button if true.</td></tr><tr><td>actionText</td><td>String</td><td>Text for action button</td></tr><tr><td>leading</td><td>Boolean</td><td>Shows snackbar on the left if true</td></tr><tr><td></td><td></td><td>(or right for rtl languages)</td></tr><tr><td>stacked</td><td>Boolean</td><td>Shows buttons under text if true</td></tr><tr><td><code>dismiss-action</code></td><td>String/Boolean</td><td>Show dismiss action</td></tr></tbody></table><h3><code>mcw-snackbar-queue</code></h3><h4>Methods</h4><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td><code>handleSnack( { timeoutMs, closeOnEscape, message, actionText, dismissAction, stacked, leading, actionHandler })</code></td><td>queues the next snack</td></tr></tbody></table><table><thead><tr><th>Parameters</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>message</td><td>String</td><td>Message to show in the snackbar</td></tr><tr><td>reason</td><td>String</td><td>Passed as argument when snackbar closes programatically</td></tr><tr><td>timeoutMs</td><td>Number</td><td>Timeout in milliseconds when to close snackbar.</td></tr><tr><td>closeOnEscape</td><td>Boolean</td><td>Closes popup on &quot;Esc&quot; button if true.</td></tr><tr><td>actionText</td><td>String</td><td>Text for action button</td></tr><tr><td>leading</td><td>Boolean</td><td>Shows snackbar on the left if true (or right for rtl languages)</td></tr><tr><td>stacked</td><td>Boolean</td><td>Shows buttons under text if true</td></tr><tr><td>actionHandler</td><td>function</td><td>Callback on action</td></tr></tbody></table><h3>Reference</h3><ul><li><a href="https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar">https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar</a></li></ul>',9);var i={render:function(t,s){return(0,e.wg)(),(0,e.j4)("article",null,[n,d,l,r,o,c,m,h])}}}}]);
//# sourceMappingURL=5178.63333bd6185cf23f8ffa.js.map