(self.webpackChunkvue_material_adapter=self.webpackChunkvue_material_adapter||[]).push([[3402],{3402:function(s,t,a){"use strict";a.r(t),a.d(t,{default:function(){return r}});var l=a(5166),n=(0,l.Wm)("h2",null,"Usage",-1),e=(0,l.Wm)("pre",null,[(0,l.Wm)("code",{"v-pre":"",class:"language-html"},[(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-select"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},":value"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"selectedType"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"label"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"Food"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"helptext"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"Pick a food group"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"leading-icon"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"restaurant_menu"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"@update:modelValue"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"onTypeChanged"'),(0,l.Uk)("\n>")]),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-list-item"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},"v-for"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"type in types"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},":key"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"type"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},":data-value"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"type"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},"role"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"option"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},"icon"),(0,l.Uk)("\n    >")]),(0,l.Uk)("{{ type }}"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("</"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-list-item"),(0,l.Uk)("\n  >")]),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("</"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-select"),(0,l.Uk)(">")]),(0,l.Uk)("\n\n"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"br"),(0,l.Uk)(" />")]),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-select"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"v-if"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"selectedType"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},":key"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"selectedType"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"v-model"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"selectedValue"'),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"outlined"),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"label"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"Kind"'),(0,l.Uk)("\n>")]),(0,l.Uk)("\n  "),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-list-item"),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},"v-for"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"option of options"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},":key"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"option"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},":data-value"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"option.toLowerCase()"'),(0,l.Uk)("\n    "),(0,l.Wm)("span",{class:"hljs-attr"},"role"),(0,l.Uk)("="),(0,l.Wm)("span",{class:"hljs-string"},'"option"'),(0,l.Uk)("\n    >")]),(0,l.Uk)("{{ option }}"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("</"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-list-item"),(0,l.Uk)("\n  >")]),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("</"),(0,l.Wm)("span",{class:"hljs-name"},"mcw-select"),(0,l.Uk)(">")]),(0,l.Uk)("\n"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("<"),(0,l.Wm)("span",{class:"hljs-name"},"span"),(0,l.Uk)(">")]),(0,l.Uk)("Selected: {{ selected }}"),(0,l.Wm)("span",{class:"hljs-tag"},[(0,l.Uk)("</"),(0,l.Wm)("span",{class:"hljs-name"},"span"),(0,l.Uk)(">")]),(0,l.Uk)("\n")])],-1),d=(0,l.Wm)("pre",null,[(0,l.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,l.Wm)("span",{class:"hljs-keyword"},"var"),(0,l.Uk)(" vm = "),(0,l.Wm)("span",{class:"hljs-keyword"},"new"),(0,l.Uk)(" Vue({\n  data() {\n    "),(0,l.Wm)("span",{class:"hljs-keyword"},"return"),(0,l.Uk)(" {\n      "),(0,l.Wm)("span",{class:"hljs-attr"},"selectedType"),(0,l.Uk)(": "),(0,l.Wm)("span",{class:"hljs-string"},"'Meat'"),(0,l.Uk)(",\n      "),(0,l.Wm)("span",{class:"hljs-attr"},"selectedValue"),(0,l.Uk)(": "),(0,l.Wm)("span",{class:"hljs-literal"},"undefined"),(0,l.Uk)(",\n      "),(0,l.Wm)("span",{class:"hljs-attr"},"food"),(0,l.Uk)(": {\n        "),(0,l.Wm)("span",{class:"hljs-attr"},"Vegetables"),(0,l.Uk)(": ["),(0,l.Wm)("span",{class:"hljs-string"},"'Spinach'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Carrots'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Onions'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Broccoli'"),(0,l.Uk)("],\n        "),(0,l.Wm)("span",{class:"hljs-attr"},"Meat"),(0,l.Uk)(": ["),(0,l.Wm)("span",{class:"hljs-string"},"'Eggs'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Chicken'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Fish'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Turkey'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Pork'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Beef'"),(0,l.Uk)("],\n        "),(0,l.Wm)("span",{class:"hljs-attr"},"Fruits"),(0,l.Uk)(": ["),(0,l.Wm)("span",{class:"hljs-string"},"'Apples'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Oranges'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Bananas'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Berries'"),(0,l.Uk)(", "),(0,l.Wm)("span",{class:"hljs-string"},"'Lemons'"),(0,l.Uk)("],\n      },\n    };\n  },\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"computed"),(0,l.Uk)(": {\n    types() {\n      "),(0,l.Wm)("span",{class:"hljs-keyword"},"return"),(0,l.Uk)(),(0,l.Wm)("span",{class:"hljs-built_in"},"Object"),(0,l.Uk)(".keys("),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".food);\n    },\n    options() {\n      "),(0,l.Wm)("span",{class:"hljs-keyword"},"return"),(0,l.Uk)(),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".selectedType ? "),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".food["),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".selectedType] : [];\n    },\n  },\n  "),(0,l.Wm)("span",{class:"hljs-attr"},"methods"),(0,l.Uk)(": {\n    onTypeChanged(nv) {\n      "),(0,l.Wm)("span",{class:"hljs-built_in"},"console"),(0,l.Uk)(".log(nv);\n      "),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".selectedType = nv;\n      "),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".selectedValue = "),(0,l.Wm)("span",{class:"hljs-literal"},"null"),(0,l.Uk)(";\n    },\n    onKindChanged(nv) {\n      "),(0,l.Wm)("span",{class:"hljs-keyword"},"this"),(0,l.Uk)(".selectedValue = nv;\n    },\n  },\n};\n")])],-1),c=(0,l.uE)('<h3><code>mcw-select</code></h3><h4>Props</h4><table><thead><tr><th>prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>label</code></td><td>String</td><td></td><td>the selection label</td></tr><tr><td><code>value</code></td><td>String</td><td></td><td>the v-model</td></tr><tr><td><code>disabled</code></td><td>Boolean</td><td>false</td><td>whether this select is disabled</td></tr><tr><td><code>outlined</code></td><td>Boolean</td><td>false</td><td>outlined style</td></tr><tr><td><code>helptext</code></td><td>String</td><td></td><td>Helptext</td></tr><tr><td><code>helptextPersistent</code></td><td>Boolean</td><td></td><td>Always show helptext</td></tr><tr><td><code>leadingIcon</code></td><td>String</td><td></td><td>Optional leading icon</td></tr><tr><td><code>disabled</code></td><td>Boolean</td><td>false</td><td>Disables control</td></tr><tr><td><code>label</code></td><td>String</td><td></td><td>Optional field label</td></tr><tr><td><code>outlined</code></td><td>Boolean</td><td>false</td><td>Use outline variant</td></tr><tr><td><code>menu-fullwidth</code></td><td>Boolean</td><td>true</td><td>Menu is full width</td></tr></tbody></table><table><thead><tr><th>event</th><th>Description</th></tr></thead><tbody><tr><td><code>@update:modelValue</code></td><td>emitted on change (supressed if value is unchanged)</td></tr><tr><td><code>mdc-select:change</code></td><td>Native event emitted on change</td></tr></tbody></table><h3>Reference</h3><ul><li><a href="https://github.com/material-components/material-components-web/tree/master/packages/mdc-select">https://github.com/material-components/material-components-web/tree/master/packages/mdc-select</a></li></ul>',6);var r={render:function(s,t){return(0,l.wg)(),(0,l.j4)("article",null,[n,e,d,c])}}}}]);
//# sourceMappingURL=3402.0c094752d9392a4970ee.js.map