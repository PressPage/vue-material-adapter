(self.webpackChunkvue_material_adapter=self.webpackChunkvue_material_adapter||[]).push([[3151],{3151:function(p,a,s){"use strict";s.r(a),s.d(a,{default:function(){return u}});var t=s(8770);const n=(0,t.Wm)("h2",null,"Usage",-1),d=(0,t.Wm)("pre",null,[(0,t.Wm)("code",{"v-pre":"",class:"language-html"},[(0,t.Wm)("span",{class:"hljs-tag"},[(0,t.Uk)("<"),(0,t.Wm)("span",{class:"hljs-name"},"mcw-snackbar"),(0,t.Uk)(`
  `),(0,t.Wm)("span",{class:"hljs-attr"},"v-model"),(0,t.Uk)("="),(0,t.Wm)("span",{class:"hljs-string"},'"open"'),(0,t.Uk)(`
  `),(0,t.Wm)("span",{class:"hljs-attr"},"message"),(0,t.Uk)("="),(0,t.Wm)("span",{class:"hljs-string"},'"Simple message"'),(0,t.Uk)(`
  `),(0,t.Wm)("span",{class:"hljs-attr"},":dismissAction"),(0,t.Uk)("="),(0,t.Wm)("span",{class:"hljs-string"},'"false"'),(0,t.Uk)(`
>`)]),(0,t.Wm)("span",{class:"hljs-tag"},[(0,t.Uk)("</"),(0,t.Wm)("span",{class:"hljs-name"},"mcw-snackbar"),(0,t.Uk)(">")]),(0,t.Uk)(`
`)])],-1),l=(0,t.Wm)("p",null,[(0,t.Uk)("Simple "),(0,t.Wm)("code",null,"mcw-snackbar"),(0,t.Uk)(" does not queue messages.")],-1),r=(0,t.Wm)("pre",null,[(0,t.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,t.Wm)("span",{class:"hljs-keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"hljs-keyword"},"default"),(0,t.Uk)(` {
  data() {
    `),(0,t.Wm)("span",{class:"hljs-keyword"},"return"),(0,t.Uk)(` {
      `),(0,t.Wm)("span",{class:"hljs-attr"},"open"),(0,t.Uk)(": "),(0,t.Wm)("span",{class:"hljs-literal"},"false"),(0,t.Uk)(`,
    };
  },
`)])],-1),o=(0,t.Wm)("p",null,[(0,t.Uk)("or "),(0,t.Wm)("code",null,"mcw-snackbar-queue"),(0,t.Uk)(" maintains an internal queue of messages displayed in sequence.")],-1),c=(0,t.Wm)("pre",null,[(0,t.Wm)("code",{"v-pre":"",class:"language-html"},[(0,t.Wm)("span",{class:"hljs-tag"},[(0,t.Uk)("<"),(0,t.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,t.Uk)(),(0,t.Wm)("span",{class:"hljs-attr"},"@click"),(0,t.Uk)("="),(0,t.Wm)("span",{class:"hljs-string"},'"showLeading"'),(0,t.Uk)(">")]),(0,t.Uk)("Leading"),(0,t.Wm)("span",{class:"hljs-tag"},[(0,t.Uk)("</"),(0,t.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,t.Uk)(">")]),(0,t.Uk)(`
`),(0,t.Wm)("span",{class:"hljs-tag"},[(0,t.Uk)("<"),(0,t.Wm)("span",{class:"hljs-name"},"mcw-snackbar-queue"),(0,t.Uk)(),(0,t.Wm)("span",{class:"hljs-attr"},"ref"),(0,t.Uk)("="),(0,t.Wm)("span",{class:"hljs-string"},'"bar"'),(0,t.Uk)(" />")]),(0,t.Uk)(`
`)])],-1),m=(0,t.Wm)("pre",null,[(0,t.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,t.Wm)("span",{class:"hljs-keyword"},"export"),(0,t.Uk)(),(0,t.Wm)("span",{class:"hljs-keyword"},"default"),(0,t.Uk)(` {
  `),(0,t.Wm)("span",{class:"hljs-attr"},"methods"),(0,t.Uk)(`: {
    showLeading() {
      `),(0,t.Wm)("span",{class:"hljs-keyword"},"this"),(0,t.Uk)(`.$refs.bar.handleSnack({
        `),(0,t.Wm)("span",{class:"hljs-attr"},"message"),(0,t.Uk)(": "),(0,t.Wm)("span",{class:"hljs-string"},"`Your photo has been archived.`"),(0,t.Uk)(`,
        `),(0,t.Wm)("span",{class:"hljs-attr"},"timeoutMs"),(0,t.Uk)(": "),(0,t.Wm)("span",{class:"hljs-number"},"5000"),(0,t.Uk)(`,
        `),(0,t.Wm)("span",{class:"hljs-attr"},"actionText"),(0,t.Uk)(": "),(0,t.Wm)("span",{class:"hljs-string"},"'Undo'"),(0,t.Uk)(`,
        `),(0,t.Wm)("span",{class:"hljs-attr"},"leading"),(0,t.Uk)(": "),(0,t.Wm)("span",{class:"hljs-literal"},"true"),(0,t.Uk)(`,
      });
    },
  },
`)])],-1),h=(0,t.uE)('<h3>Props</h3><h3><code>mcw-snackbar</code></h3><table><thead><tr><th>Prop Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>open</code></td><td>Boolean</td><td>v-model</td></tr><tr><td>message</td><td>String</td><td>Message to show in the snackbar</td></tr><tr><td>reason</td><td>String</td><td>Passed as argument when snackbar closes programatically</td></tr><tr><td>timeoutMs</td><td>Number</td><td>Timeout in milliseconds when to close snackbar.</td></tr><tr><td>closeOnEscape</td><td>Boolean</td><td>Closes popup on &quot;Esc&quot; button if true.</td></tr><tr><td>actionText</td><td>String</td><td>Text for action button</td></tr><tr><td>leading</td><td>Boolean</td><td>Shows snackbar on the left if true</td></tr><tr><td></td><td></td><td>(or right for rtl languages)</td></tr><tr><td>stacked</td><td>Boolean</td><td>Shows buttons under text if true</td></tr><tr><td><code>dismiss-action</code></td><td>String/Boolean</td><td>Show dismiss action</td></tr></tbody></table><h3><code>mcw-snackbar-queue</code></h3><h4>Methods</h4><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td><code>handleSnack( { timeoutMs, closeOnEscape, message, actionText, dismissAction, stacked, leading, actionHandler })</code></td><td>queues the next snack</td></tr></tbody></table><table><thead><tr><th>Parameters</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>message</td><td>String</td><td>Message to show in the snackbar</td></tr><tr><td>reason</td><td>String</td><td>Passed as argument when snackbar closes programatically</td></tr><tr><td>timeoutMs</td><td>Number</td><td>Timeout in milliseconds when to close snackbar.</td></tr><tr><td>closeOnEscape</td><td>Boolean</td><td>Closes popup on &quot;Esc&quot; button if true.</td></tr><tr><td>actionText</td><td>String</td><td>Text for action button</td></tr><tr><td>leading</td><td>Boolean</td><td>Shows snackbar on the left if true (or right for rtl languages)</td></tr><tr><td>stacked</td><td>Boolean</td><td>Shows buttons under text if true</td></tr><tr><td>actionHandler</td><td>function</td><td>Callback on action</td></tr></tbody></table><h3>Reference</h3><ul><li><a href="https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar">https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar</a></li></ul>',9);function i(k,g){return(0,t.wg)(),(0,t.j4)("article",null,[n,d,l,r,o,c,m,h])}const e={};e.render=i;var u=e}}]);

//# sourceMappingURL=3151.9eeed816b2d370abbdc7.js.map