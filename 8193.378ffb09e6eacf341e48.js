(self.webpackChunkvue_material_adapter=self.webpackChunkvue_material_adapter||[]).push([[8193],{8193:function(i,a,t){"use strict";t.r(a),t.d(a,{default:function(){return c}});var s=t(8770);const e=(0,s.Wm)("h2",null,"Usage",-1),l=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-html"},[(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"div"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"class"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"tooltip-demo"'),(0,s.Uk)(">")]),(0,s.Uk)(`
  `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-tooltip"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"id"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"tooltip-id"'),(0,s.Uk)(">")]),(0,s.Uk)("My tooltip 1"),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-tooltip"),(0,s.Uk)(">")]),(0,s.Uk)(`
  `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-tooltip"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"id"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"tooltip-id2"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"position"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"end,above"'),(0,s.Uk)(`
    >`)]),(0,s.Uk)("Another tooltip 2"),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-tooltip"),(0,s.Uk)(`
  >`)]),(0,s.Uk)(`
  This is `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"a"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"aria-describedby"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"tooltip-id"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"href"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"www.google.com"'),(0,s.Uk)(">")]),(0,s.Uk)(" Link "),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"a"),(0,s.Uk)(">")]),(0,s.Uk)(`.
  `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"p"),(0,s.Uk)(">")]),(0,s.Uk)(`
    Here is
    `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("<"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"aria-describedby"),(0,s.Uk)("="),(0,s.Wm)("span",{class:"hljs-string"},'"tooltip-id2"'),(0,s.Uk)(),(0,s.Wm)("span",{class:"hljs-attr"},"outlined"),(0,s.Uk)(">")]),(0,s.Uk)("My Button"),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"mcw-button"),(0,s.Uk)(">")]),(0,s.Uk)(`
  `),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"p"),(0,s.Uk)(">")]),(0,s.Uk)(`
`),(0,s.Wm)("span",{class:"hljs-tag"},[(0,s.Uk)("</"),(0,s.Wm)("span",{class:"hljs-name"},"div"),(0,s.Uk)(">")]),(0,s.Uk)(`
`)])],-1),o=(0,s.Wm)("pre",null,[(0,s.Wm)("code",{"v-pre":"",class:"language-javascript"},[(0,s.Wm)("span",{class:"hljs-keyword"},"var"),(0,s.Uk)(" vm = "),(0,s.Wm)("span",{class:"hljs-keyword"},"new"),(0,s.Uk)(` Vue({
  `),(0,s.Wm)("span",{class:"hljs-attr"},"data"),(0,s.Uk)(`: {},
  `),(0,s.Wm)("span",{class:"hljs-attr"},"methods"),(0,s.Uk)(`: {
    onHidden() {
      `),(0,s.Wm)("span",{class:"hljs-built_in"},"console"),(0,s.Uk)(".dir("),(0,s.Wm)("span",{class:"hljs-string"},"'hidden'"),(0,s.Uk)(`);
    },
  },
});
`)])],-1),p=(0,s.uE)('<h3>events</h3><table><thead><tr><th>event</th><th>args</th><th>Description</th></tr></thead><tbody><tr><td>mdctooltip:hidden</td><td></td><td>Emitted when the tooltip stops being shown</td></tr></tbody></table><h3>props</h3><table><thead><tr><th>prop</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>position</td><td>String/Object</td><td></td><td>The position of the tooltop</td></tr><tr><td>boundaryType</td><td>String/Number</td><td></td><td>The anchor boundary type</td></tr></tbody></table><p><code>position</code>: This is either a comma separated string or an object {xPos: XPosition, yPos: YPosition} eg. &quot;end,above&quot; or {xPos:&quot;center&quot;, yPos:&quot;below&quot;} or {xPos: 0, yPos: 1}</p><p>XPosition { &#39;detected&#39; = 0, &#39;start&#39; = 1, &#39;center&#39; = 2, &#39;end&#39; = 3, }</p><p>YPosition { &#39;detected&#39; = 0, &#39;above&#39; = 1, &#39;below&#39; = 2, }</p><p><code>boundaryType</code>: This is either a string or a number. eg. &quot;bounded&quot; or 0</p><p>AnchorBoundaryType { &#39;bounded&#39; = 0, &#39;unbounded&#39; = 1, }</p><h3>Theming and Reference</h3><ul><li><a href="https://github.com/material-components/material-components-web/tree/master/packages/mdc-tooltip">https://github.com/material-components/material-components-web/tree/master/packages/mdc-tooltip</a></li></ul>',11);function h(m,d){return(0,s.wg)(),(0,s.j4)("article",null,[e,l,o,p])}const n={};n.render=h;var c=n}}]);

//# sourceMappingURL=8193.378ffb09e6eacf341e48.js.map